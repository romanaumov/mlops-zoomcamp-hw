[2025-06-11T12:41:38.171+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-06-11T12:41:38.204+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: nyc_taxi_ml_pipeline.train_xgboost_model manual__2025-06-11T12:13:31.335012+00:00 [queued]>
[2025-06-11T12:41:38.218+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: nyc_taxi_ml_pipeline.train_xgboost_model manual__2025-06-11T12:13:31.335012+00:00 [queued]>
[2025-06-11T12:41:38.218+0000] {taskinstance.py:2867} INFO - Starting attempt 2 of 2
[2025-06-11T12:41:38.236+0000] {taskinstance.py:2890} INFO - Executing <Task(PythonOperator): train_xgboost_model> on 2025-06-11 12:13:31.335012+00:00
[2025-06-11T12:41:38.254+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=1094) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-06-11T12:41:38.255+0000] {standard_task_runner.py:72} INFO - Started process 1111 to run task
[2025-06-11T12:41:38.258+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'nyc_taxi_ml_pipeline', 'train_xgboost_model', 'manual__2025-06-11T12:13:31.335012+00:00', '--job-id', '16', '--raw', '--subdir', 'DAGS_FOLDER/dag_full.py', '--cfg-path', '/tmp/tmp_x8cjyk4']
[2025-06-11T12:41:38.261+0000] {standard_task_runner.py:105} INFO - Job 16: Subtask train_xgboost_model
[2025-06-11T12:41:38.327+0000] {task_command.py:467} INFO - Running <TaskInstance: nyc_taxi_ml_pipeline.train_xgboost_model manual__2025-06-11T12:13:31.335012+00:00 [running]> on host e64a68750d42
[2025-06-11T12:41:38.442+0000] {taskinstance.py:3134} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='ml-team' AIRFLOW_CTX_DAG_ID='nyc_taxi_ml_pipeline' AIRFLOW_CTX_TASK_ID='train_xgboost_model' AIRFLOW_CTX_EXECUTION_DATE='2025-06-11T12:13:31.335012+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-06-11T12:13:31.335012+00:00'
[2025-06-11T12:41:38.443+0000] {taskinstance.py:732} INFO - ::endgroup::
[2025-06-11T12:41:39.391+0000] {logging_mixin.py:190} INFO - Training XGBoost model...
[2025-06-11T12:41:39.459+0000] {logging_mixin.py:190} WARNING - 2025/06/11 12:41:39 WARNING mlflow.utils.git_utils: Failed to import Git (the Git executable is probably not on your PATH), so Git SHA is not available. Error: Failed to initialize: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh(<full-path-to-git-executable>)

All git commands will error until this is rectified.

This initial message can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|silent|none|n|0: for no message or exception
    - warn|w|warning|log|l|1: for a warning message (logging level CRITICAL, displayed by default)
    - error|e|exception|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet
[2025-06-11T12:41:52.842+0000] {taskinstance.py:3313} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 768, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 734, in _execute_callable
    return ExecutionCallableRunner(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 424, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 238, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 256, in execute_callable
    return runner.run(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/dag_full.py", line 195, in train_xgboost_model_task
    split_idx = int(0.8 * len(X))
                          ^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/scipy/sparse/_base.py", line 425, in __len__
    raise TypeError("sparse array length is ambiguous; use getnnz()"
TypeError: sparse array length is ambiguous; use getnnz() or shape[0]
[2025-06-11T12:41:52.859+0000] {taskinstance.py:1226} INFO - Marking task as FAILED. dag_id=nyc_taxi_ml_pipeline, task_id=train_xgboost_model, run_id=manual__2025-06-11T12:13:31.335012+00:00, execution_date=20250611T121331, start_date=20250611T124138, end_date=20250611T124152
[2025-06-11T12:41:52.894+0000] {taskinstance.py:341} INFO - ::group::Post task execution logs
[2025-06-11T12:41:52.894+0000] {standard_task_runner.py:124} ERROR - Failed to execute job 16 for task train_xgboost_model (sparse array length is ambiguous; use getnnz() or shape[0]; 1111)
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py", line 117, in _start_by_fork
    ret = args.func(args, dag=self.dag)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/cli_config.py", line 49, in command
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/cli.py", line 116, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 483, in task_run
    task_return_code = _run_task_by_selected_method(args, _dag, ti)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 256, in _run_task_by_selected_method
    return _run_raw_task(args, ti)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 341, in _run_raw_task
    return ti._run_raw_task(
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3006, in _run_raw_task
    return _run_raw_task(
           ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 274, in _run_raw_task
    TaskInstance._execute_task_with_callbacks(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3161, in _execute_task_with_callbacks
    result = self._execute_task(context, task_orig)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3185, in _execute_task
    return _execute_task(self, context, task_orig)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 768, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 734, in _execute_callable
    return ExecutionCallableRunner(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 424, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 238, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 256, in execute_callable
    return runner.run(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/operator_helpers.py", line 252, in run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/dag_full.py", line 195, in train_xgboost_model_task
    split_idx = int(0.8 * len(X))
                          ^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/scipy/sparse/_base.py", line 425, in __len__
    raise TypeError("sparse array length is ambiguous; use getnnz()"
TypeError: sparse array length is ambiguous; use getnnz() or shape[0]
[2025-06-11T12:41:53.215+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 1
[2025-06-11T12:41:53.248+0000] {taskinstance.py:3901} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-06-11T12:41:53.256+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
[2025-06-11T12:41:53.259+0000] {standard_task_runner.py:217} INFO - Process not found (most likely exited), stop collecting metrics
